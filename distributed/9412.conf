#!/usr/bin/php
<?php 

$file_name_1 = basename(__FILE__,".conf");//获取9400
$path = dirname(__FILE__);
include "$path/config/config.php";

//把$file_name_1的文件夹里面的所有配置都加载
$files = scandir("$path/main_index/$file_name_1/");
foreach($files as $key => $value){
    if($value != "." && $value != ".." ) {
        include("$path/main_index/$file_name_1/$value");
    }
}
?>


indexer
{
    # memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
    # optional, default is 32M, max is 2047M, recommended is 256M to 1024M
    mem_limit = 2047M

}


searchd
{
    # [hostname:]port[:protocol], or /unix/socket/path to listen on
    # known protocols are 'sphinx' (SphinxAPI) and 'mysql41' (SphinxQL)
    #
    # multi-value, multiple listen points are allowed
    # optional, defaults are 9312:sphinx and 9306:mysql41, as below
    #
    # listen			= 127.0.0.1
    # listen			= 192.168.0.1:9312
    # listen			= 9312
    # listen			= /var/run/searchd.sock
    # listen			= 9306:mysql41
    listen = <?php echo $globals["searchd_listen_address"];?>:<?php echo $file_name_1;?>



    # log file, searchd run info is logged here
    # optional, default is 'searchd.log'
    log	= <?php echo $globals["log_path"];?>/<?php echo $file_name_1;?>/searchd.log

    # query log file, all search queries are logged here
    # optional, default is empty (do not log queries)
    query_log = <?php echo $globals["log_path"];?>/<?php echo $file_name_1;?>/query.log

    binlog_path =  <?php echo $globals["log_path"];?>/<?php echo $file_name_1;?>/

    binlog_max_log_size = 256M 
    
    # maximum amount of children to fork (concurrent searches to run)
    # optional, default is 0 (unlimited)
    max_children = 30

    # PID file, searchd process ID file name
    # mandatory
    pid_file = <?php echo $globals["log_path"];?>/<?php echo $file_name_1;?>/searchd.pid 

    
    # multi-processing mode (MPM)
    # known values are none, fork, prefork, and threads
    # optional, default is fork
    #
    workers = <?php echo $globals["mpm"];?> # for RT to work

       

    dist_threads = 16
}